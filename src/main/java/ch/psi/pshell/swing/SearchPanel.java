package ch.psi.pshell.swing;

import ch.psi.utils.IO;
import ch.psi.utils.swing.MainFrame;
import ch.psi.utils.swing.MonitoredPanel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;

/**
 *
 */
public class SearchPanel extends MonitoredPanel {

    DefaultTableModel model;

    
    public SearchPanel(String pathName, final String filter,
            String pattern, boolean caseInsensitive, boolean wholeWords, String[] ignores, boolean recursive) {
        initComponents();
        if (MainFrame.isDark()) {
            status.setEnabled(true);
        }
        model = (DefaultTableModel) table.getModel();
        table.getColumnModel().getColumn(0).setPreferredWidth(260);
        table.getColumnModel().getColumn(1).setPreferredWidth(40);
        table.getColumnModel().getColumn(2).setPreferredWidth(400);
        status.setText("Searching... ");
        Thread t = new Thread(() -> {
            try {
                IO.grep(pathName, filter, pattern, caseInsensitive, wholeWords, recursive, ignores, grepListener);
            } catch (IOException ex) {
                showException(ex);
            }
            status.setText(table.getRowCount() + " occurances found");
        });
        t.setDaemon(true);
        t.start();

        table.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    if ((e.getClickCount() == 2) && (!e.isPopupTrigger())) {
                        File file = (File) model.getValueAt(table.getSelectedRow(), 0);
                        int row = (Integer) model.getValueAt(table.getSelectedRow(), 1);
                        String text = (String) model.getValueAt(table.getSelectedRow(), 2);
                        onDoubleClick(file, row, text);
                    }
                } catch (Exception ex) {
                    showException(ex);
                }
            }
        });
    }
    IO.GrepListener grepListener = new IO.GrepListener() {
        @Override
        public void onMatch(File file, int i, String string) {
            model.addRow(new Object[]{file, i, string});
        }
    };

    protected void onDoubleClick(File file, int row, String text) throws IOException {
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        status = new javax.swing.JTextPane();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Row", "Text"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        status.setEditable(false);
        status.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        status.setEnabled(false);
        jScrollPane2.setViewportView(status);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane status;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
