//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.27 at 11:18:50 AM CEST 
//


package ch.psi.pshell.xscan.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ch.psi.pshell.xscan.model.v1 package.
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Configuration_QNAME = new QName("http://www.psi.ch/~ebner/models/scan/1.0", "configuration");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ch.psi.pshell.xscan.model.v1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link ScalerChannel }
     * 
     */
    public ScalerChannel createScalerChannel() {
        return new ScalerChannel();
    }

    /**
     * Create an instance of {@link ComplexDetector }
     * 
     */
    public ComplexDetector createComplexDetector() {
        return new ComplexDetector();
    }

    /**
     * Create an instance of {@link GuardCondition }
     * 
     */
    public GuardCondition createGuardCondition() {
        return new GuardCondition();
    }

    /**
     * Create an instance of {@link Variable }
     * 
     */
    public Variable createVariable() {
        return new Variable();
    }

    /**
     * Create an instance of {@link ChannelParameterMapping }
     * 
     */
    public ChannelParameterMapping createChannelParameterMapping() {
        return new ChannelParameterMapping();
    }

    /**
     * Create an instance of {@link VariableParameterMapping }
     * 
     */
    public VariableParameterMapping createVariableParameterMapping() {
        return new VariableParameterMapping();
    }

    /**
     * Create an instance of {@link IDParameterMapping }
     * 
     */
    public IDParameterMapping createIDParameterMapping() {
        return new IDParameterMapping();
    }

    /**
     * Create an instance of {@link ScriptManipulation }
     * 
     */
    public ScriptManipulation createScriptManipulation() {
        return new ScriptManipulation();
    }

    /**
     * Create an instance of {@link Timestamp }
     * 
     */
    public Timestamp createTimestamp() {
        return new Timestamp();
    }

    /**
     * Create an instance of {@link Notification }
     * 
     */
    public Notification createNotification() {
        return new Notification();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link ShellAction }
     * 
     */
    public ShellAction createShellAction() {
        return new ShellAction();
    }

    /**
     * Create an instance of {@link FunctionPositioner }
     * 
     */
    public FunctionPositioner createFunctionPositioner() {
        return new FunctionPositioner();
    }

    /**
     * Create an instance of {@link ChannelAction }
     * 
     */
    public ChannelAction createChannelAction() {
        return new ChannelAction();
    }

    /**
     * Create an instance of {@link DetectorOfDetectors }
     * 
     */
    public DetectorOfDetectors createDetectorOfDetectors() {
        return new DetectorOfDetectors();
    }

    /**
     * Create an instance of {@link Guard }
     * 
     */
    public Guard createGuard() {
        return new Guard();
    }

    /**
     * Create an instance of {@link ContinuousPositioner }
     * 
     */
    public ContinuousPositioner createContinuousPositioner() {
        return new ContinuousPositioner();
    }

    /**
     * Create an instance of {@link SimpleScalarDetector }
     * 
     */
    public SimpleScalarDetector createSimpleScalarDetector() {
        return new SimpleScalarDetector();
    }

    /**
     * Create an instance of {@link MatrixPlot }
     * 
     */
    public MatrixPlot createMatrixPlot() {
        return new MatrixPlot();
    }

    /**
     * Create an instance of {@link LinePlot }
     * 
     */
    public LinePlot createLinePlot() {
        return new LinePlot();
    }

    /**
     * Create an instance of {@link ContinuousDimension }
     * 
     */
    public ContinuousDimension createContinuousDimension() {
        return new ContinuousDimension();
    }

    /**
     * Create an instance of {@link ArrayDetector }
     * 
     */
    public ArrayDetector createArrayDetector() {
        return new ArrayDetector();
    }

    /**
     * Create an instance of {@link Data }
     * 
     */
    public Data createData() {
        return new Data();
    }

    /**
     * Create an instance of {@link Recipient }
     * 
     */
    public Recipient createRecipient() {
        return new Recipient();
    }

    /**
     * Create an instance of {@link PseudoPositioner }
     * 
     */
    public PseudoPositioner createPseudoPositioner() {
        return new PseudoPositioner();
    }

    /**
     * Create an instance of {@link LinearPositioner }
     * 
     */
    public LinearPositioner createLinearPositioner() {
        return new LinearPositioner();
    }

    /**
     * Create an instance of {@link ArrayPositioner }
     * 
     */
    public ArrayPositioner createArrayPositioner() {
        return new ArrayPositioner();
    }

    /**
     * Create an instance of {@link ScalarDetector }
     * 
     */
    public ScalarDetector createScalarDetector() {
        return new ScalarDetector();
    }

    /**
     * Create an instance of {@link ParameterMapping }
     * 
     */
    public ParameterMapping createParameterMapping() {
        return new ParameterMapping();
    }

    /**
     * Create an instance of {@link LinePlotArray }
     * 
     */
    public LinePlotArray createLinePlotArray() {
        return new LinePlotArray();
    }

    /**
     * Create an instance of {@link RegionPositioner }
     * 
     */
    public RegionPositioner createRegionPositioner() {
        return new RegionPositioner();
    }

    /**
     * Create an instance of {@link Region }
     * 
     */
    public Region createRegion() {
        return new Region();
    }

    /**
     * Create an instance of {@link DiscreteStepDimension }
     * 
     */
    public DiscreteStepDimension createDiscreteStepDimension() {
        return new DiscreteStepDimension();
    }

    /**
     * Create an instance of {@link MatrixPlotArray }
     * 
     */
    public MatrixPlotArray createMatrixPlotArray() {
        return new MatrixPlotArray();
    }

    /**
     * Create an instance of {@link Scan }
     * 
     */
    public Scan createScan() {
        return new Scan();
    }

    /**
     * Create an instance of {@link ScriptAction }
     * 
     */
    public ScriptAction createScriptAction() {
        return new ScriptAction();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Configuration }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.psi.ch/~ebner/models/scan/1.0", name = "configuration")
    public JAXBElement<Configuration> createConfiguration(Configuration value) {
        return new JAXBElement<Configuration>(_Configuration_QNAME, Configuration.class, null, value);
    }

}
