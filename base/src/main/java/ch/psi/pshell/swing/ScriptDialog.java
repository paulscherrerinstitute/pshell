package ch.psi.pshell.swing;


import ch.psi.pshell.app.MainFrame;
import ch.psi.pshell.utils.EncoderJson;
import java.awt.Window;
import java.io.IOException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rsyntaxtextarea.Theme;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 */
public class ScriptDialog extends StandardDialog {

    final String script;
    final String syntax;
    String text = null;
    final RSyntaxTextArea editorPane;
    final RTextScrollPane scrollPane;

    public ScriptDialog(Window parent, boolean modal, String name, String script, String syntax) {
        super(parent, modal);
        initComponents();
        
        if ((syntax == null) || (syntax == "py")){
            syntax = SyntaxConstants.SYNTAX_STYLE_PYTHON;
        } else if (syntax == "json"){
            syntax = SyntaxConstants.SYNTAX_STYLE_JSON;
        } 
        this.syntax = syntax;
        
        //textConfig.setText(config);
        this.setTitle(name);
        this.script = script;        
        editorPane = new RSyntaxTextArea(20, 60);
        editorPane.setAnimateBracketMatching(false);
        editorPane.setHighlightCurrentLine(true);        
        editorPane.setTabsEmulated(true);        
        editorPane.setSyntaxEditingStyle(syntax);        
        editorPane.getMargin().left = 3;                            
        scrollPane = new RTextScrollPane(editorPane);
        scrollPane.setLineNumbersEnabled(true);
                
        panel.add(scrollPane);
       
        editorPane.setText(script);
        onLafChange();
        SwingUtils.scrollToVisible(editorPane, 0);
        this.setSize(600,400);
        this.setLocationRelativeTo(parent);
    }
    
    @Override
    protected void onLafChange() {
        Theme theme;
        try {
            if (MainFrame.isDark()){
                theme = Theme.load(getClass().getResourceAsStream("/org/fife/ui/rsyntaxtextarea/themes/dark.xml"));
            } else {
                theme = Theme.load(getClass().getResourceAsStream("/org/fife/ui/rsyntaxtextarea/themes/default.xml"));
            }
            theme.apply(editorPane);
        } catch (IOException ex) {
            Logger.getLogger(ScriptDialog.class.getName()).log(Level.SEVERE, null, ex);
        }    

    }    
    

    public void setReadOnly(boolean value){
        editorPane.setEditable(!value);
        buttonOk.setVisible(!value);
    }

    public boolean isReadOnly(){
        return !editorPane.isEditable();
    }
    
    public String getText(){
        return text;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        buttonOk.setText("Ok");
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        panel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCancel)
                .addGap(18, 18, 18)
                .addComponent(buttonOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonCancel, buttonOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        cancel();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        try {            
            text = editorPane.getText();
            if (text.equals(script)){
                cancel();
            } else {
                if (syntax.equals(SyntaxConstants.SYNTAX_STYLE_JSON)){
                    Map<String, Object> map = (Map) EncoderJson.decode(text, Map.class);
                }
                accept();
            }
        } catch (Exception ex) {
            showException(ex);
        }
    }//GEN-LAST:event_buttonOkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
